package cashflowdb;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import cashflowdb.UserInfo;
import cashflowdb.FinancialYear;
import cashflowdb.InitialBudget;
import cashflowdb.Category;
import cashflowdb.Source;
import cashflowdb.HowOften;
import cashflowdb.InOutTransaction;
import cashflowdb.RepeatTransaction;
import cashflowdb.DayInOutSummery;
import cashflowdb.Subscription;

import cashflowdb.UserInfoDao;
import cashflowdb.FinancialYearDao;
import cashflowdb.InitialBudgetDao;
import cashflowdb.CategoryDao;
import cashflowdb.SourceDao;
import cashflowdb.HowOftenDao;
import cashflowdb.InOutTransactionDao;
import cashflowdb.RepeatTransactionDao;
import cashflowdb.DayInOutSummeryDao;
import cashflowdb.SubscriptionDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userInfoDaoConfig;
    private final DaoConfig financialYearDaoConfig;
    private final DaoConfig initialBudgetDaoConfig;
    private final DaoConfig categoryDaoConfig;
    private final DaoConfig sourceDaoConfig;
    private final DaoConfig howOftenDaoConfig;
    private final DaoConfig inOutTransactionDaoConfig;
    private final DaoConfig repeatTransactionDaoConfig;
    private final DaoConfig dayInOutSummeryDaoConfig;
    private final DaoConfig subscriptionDaoConfig;

    private final UserInfoDao userInfoDao;
    private final FinancialYearDao financialYearDao;
    private final InitialBudgetDao initialBudgetDao;
    private final CategoryDao categoryDao;
    private final SourceDao sourceDao;
    private final HowOftenDao howOftenDao;
    private final InOutTransactionDao inOutTransactionDao;
    private final RepeatTransactionDao repeatTransactionDao;
    private final DayInOutSummeryDao dayInOutSummeryDao;
    private final SubscriptionDao subscriptionDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        financialYearDaoConfig = daoConfigMap.get(FinancialYearDao.class).clone();
        financialYearDaoConfig.initIdentityScope(type);

        initialBudgetDaoConfig = daoConfigMap.get(InitialBudgetDao.class).clone();
        initialBudgetDaoConfig.initIdentityScope(type);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        sourceDaoConfig = daoConfigMap.get(SourceDao.class).clone();
        sourceDaoConfig.initIdentityScope(type);

        howOftenDaoConfig = daoConfigMap.get(HowOftenDao.class).clone();
        howOftenDaoConfig.initIdentityScope(type);

        inOutTransactionDaoConfig = daoConfigMap.get(InOutTransactionDao.class).clone();
        inOutTransactionDaoConfig.initIdentityScope(type);

        repeatTransactionDaoConfig = daoConfigMap.get(RepeatTransactionDao.class).clone();
        repeatTransactionDaoConfig.initIdentityScope(type);

        dayInOutSummeryDaoConfig = daoConfigMap.get(DayInOutSummeryDao.class).clone();
        dayInOutSummeryDaoConfig.initIdentityScope(type);

        subscriptionDaoConfig = daoConfigMap.get(SubscriptionDao.class).clone();
        subscriptionDaoConfig.initIdentityScope(type);

        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);
        financialYearDao = new FinancialYearDao(financialYearDaoConfig, this);
        initialBudgetDao = new InitialBudgetDao(initialBudgetDaoConfig, this);
        categoryDao = new CategoryDao(categoryDaoConfig, this);
        sourceDao = new SourceDao(sourceDaoConfig, this);
        howOftenDao = new HowOftenDao(howOftenDaoConfig, this);
        inOutTransactionDao = new InOutTransactionDao(inOutTransactionDaoConfig, this);
        repeatTransactionDao = new RepeatTransactionDao(repeatTransactionDaoConfig, this);
        dayInOutSummeryDao = new DayInOutSummeryDao(dayInOutSummeryDaoConfig, this);
        subscriptionDao = new SubscriptionDao(subscriptionDaoConfig, this);

        registerDao(UserInfo.class, userInfoDao);
        registerDao(FinancialYear.class, financialYearDao);
        registerDao(InitialBudget.class, initialBudgetDao);
        registerDao(Category.class, categoryDao);
        registerDao(Source.class, sourceDao);
        registerDao(HowOften.class, howOftenDao);
        registerDao(InOutTransaction.class, inOutTransactionDao);
        registerDao(RepeatTransaction.class, repeatTransactionDao);
        registerDao(DayInOutSummery.class, dayInOutSummeryDao);
        registerDao(Subscription.class, subscriptionDao);
    }
    
    public void clear() {
        userInfoDaoConfig.getIdentityScope().clear();
        financialYearDaoConfig.getIdentityScope().clear();
        initialBudgetDaoConfig.getIdentityScope().clear();
        categoryDaoConfig.getIdentityScope().clear();
        sourceDaoConfig.getIdentityScope().clear();
        howOftenDaoConfig.getIdentityScope().clear();
        inOutTransactionDaoConfig.getIdentityScope().clear();
        repeatTransactionDaoConfig.getIdentityScope().clear();
        dayInOutSummeryDaoConfig.getIdentityScope().clear();
        subscriptionDaoConfig.getIdentityScope().clear();
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

    public FinancialYearDao getFinancialYearDao() {
        return financialYearDao;
    }

    public InitialBudgetDao getInitialBudgetDao() {
        return initialBudgetDao;
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public SourceDao getSourceDao() {
        return sourceDao;
    }

    public HowOftenDao getHowOftenDao() {
        return howOftenDao;
    }

    public InOutTransactionDao getInOutTransactionDao() {
        return inOutTransactionDao;
    }

    public RepeatTransactionDao getRepeatTransactionDao() {
        return repeatTransactionDao;
    }

    public DayInOutSummeryDao getDayInOutSummeryDao() {
        return dayInOutSummeryDao;
    }

    public SubscriptionDao getSubscriptionDao() {
        return subscriptionDao;
    }

}
